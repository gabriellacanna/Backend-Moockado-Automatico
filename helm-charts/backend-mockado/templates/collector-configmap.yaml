{{- if .Values.collector.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "backend-mockado.fullname" . }}-collector-config
  labels:
    {{- include "backend-mockado.collector.labels" . | nindent 4 }}
    {{- with .Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
data:
  collector.yaml: |
    collector:
      # Configurações do servidor
      host: "0.0.0.0"
      http_port: {{ .Values.collector.service.ports.http }}
      grpc_port: {{ .Values.collector.service.ports.grpc }}
      metrics_port: {{ .Values.collector.service.ports.metrics }}
      
      # Configurações de logging
      log_level: "{{ .Values.collector.config.logLevel }}"
      log_format: "json"
      
      # Configurações de processamento
      body_size_limit: {{ .Values.collector.config.bodySizeLimit }}
      enable_sampling: {{ .Values.collector.config.enableSampling }}
      default_sample_rate: {{ .Values.collector.config.defaultSampleRate }}
      dedup_ttl: {{ .Values.collector.config.dedupTtl }}
      batch_size: {{ .Values.collector.config.batchSize }}
      batch_timeout: {{ .Values.collector.config.batchTimeout }}
      max_concurrent_requests: {{ .Values.collector.config.maxConcurrentRequests }}
      enable_metrics: {{ .Values.collector.config.enableMetrics }}
      
      # Configurações do Redis
      redis_url: "{{ include "backend-mockado.redisUrl" . }}"
      redis_db: 0
      
      # Configurações de sanitização
      sanitization:
        enabled: true
        patterns:
          # Headers sensíveis
          - type: "header"
            pattern: "(?i)(authorization|cookie|x-api-key|x-auth-token)"
            replacement: "SANITIZED_HEADER"
          
          # Dados de cartão de crédito
          - type: "body"
            pattern: "\\b(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3[0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12})\\b"
            replacement: "SANITIZED_CARD"
          
          # CPF/CNPJ
          - type: "body"
            pattern: "\\b\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}\\b|\\b\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}\\b"
            replacement: "SANITIZED_DOCUMENT"
          
          # Email
          - type: "body"
            pattern: "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b"
            replacement: "SANITIZED_EMAIL"
          
          # Telefone
          - type: "body"
            pattern: "\\b(?:\\+55\\s?)?\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}\\b"
            replacement: "SANITIZED_PHONE"
          
          # Senhas
          - type: "body"
            pattern: "(?i)(password|senha|secret)\"?\\s*[:=]\\s*\"?[^\"\\s,}]+"
            replacement: "$1\": \"SANITIZED_PASSWORD\""
          
          # Tokens JWT
          - type: "body"
            pattern: "\\beyJ[A-Za-z0-9_-]*\\.[A-Za-z0-9_-]*\\.[A-Za-z0-9_-]*\\b"
            replacement: "SANITIZED_JWT"
      
      # Configurações de deduplicação
      deduplication:
        enabled: true
        hash_fields:
          - "method"
          - "path"
          - "query_params"
          - "body_hash"
        ttl_seconds: {{ .Values.collector.config.dedupTtl }}
      
      # Configurações de filtros
      filters:
        # Métodos HTTP permitidos
        allowed_methods:
          - "GET"
          - "POST"
          - "PUT"
          - "DELETE"
          - "PATCH"
        
        # Padrões de path para capturar
        path_patterns:
          - "^/(api|v[0-9]+)/.*"
          - "^/graphql$"
        
        # Paths para excluir
        exclude_paths:
          - "/health.*"
          - "/metrics.*"
          - "/ready.*"
          - "/live.*"
          - "/favicon.ico"
          - "/__admin.*"
        
        # Hosts para excluir
        exclude_hosts:
          - "localhost"
          - "127.0.0.1"
          - "*.local"
      
      # Configurações de monitoramento
      monitoring:
        enabled: {{ .Values.collector.config.enableMetrics }}
        metrics_path: "/metrics"
        health_path: "/health"
        ready_path: "/ready"
{{- end }}